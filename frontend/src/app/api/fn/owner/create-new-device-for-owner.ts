/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { CreateNewJewelBody } from '../../models/create-new-jewel-body';
import { Device } from '../../models/device';

export interface CreateNewDeviceForOwner$Params {
  ownerId: string;
  body?: CreateNewJewelBody;
}

export function createNewDeviceForOwner(
  http: HttpClient,
  rootUrl: string,
  params: CreateNewDeviceForOwner$Params,
  context?: HttpContext
): Observable<StrictHttpResponse<Device>> {
  const rb = new RequestBuilder(rootUrl, createNewDeviceForOwner.PATH, 'post');
  if (params) {
    rb.path('ownerId', params.ownerId, {});
    rb.body(params.body, 'application/json');
  }

  return http.request(rb.build({ responseType: 'json', accept: 'application/json', context })).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<Device>;
    })
  );
}

createNewDeviceForOwner.PATH = '/api/admin/owner/{ownerId}/device';
